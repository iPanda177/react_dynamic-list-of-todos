{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","types/Todo.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onSelectedTodo","selectedTodo","isSelected","className","map","id","title","completed","classNames","type","onClick","TodoFilter","setFilterSelect","query","setQuery","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterType","TodoModal","setClose","userId","useState","user","setUser","useEffect","getUser","users","href","email","name","App","setTodos","isLoading","setIsLoading","filterSelect","setSelectedTodo","initialTodos","setInitialTodos","searchByInput","todoTitle","searchInput","toLowerCase","includes","todo","filter","ALL","ACTIVE","COMPLETED","Error","todoId","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a314aed.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onSelectedTodo:(id:number) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelectedTodo,\n  selectedTodo,\n}) => {\n  const isSelected = !!selectedTodo;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(({ id, title, completed }) => {\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light':\n                isSelected ? selectedTodo.id === id : false,\n              })}\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-danger': !completed,\n                    'has-text-success': completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onSelectedTodo(id)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(\n                      'far',\n                      { 'fa-eye-slash': selectedTodo?.id === id },\n                      { 'fa-eye': selectedTodo?.id !== id },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  setFilterSelect: (value: string) => void;\n  query: string;\n  setQuery: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilterSelect,\n  query,\n  setQuery,\n}) => {\n  const handleStatusSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterSelect(event.target.value);\n  };\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const clearInput = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleStatusSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearInput}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export interface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n}\n\nexport enum FilterType {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\n\nimport { getUser } from '../../api';\n\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo;\n  setClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setClose,\n}) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedTodo;\n\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId).then(users => {\n      setUser(users);\n    });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setClose()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\n\nimport { Todo, FilterType } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [filterSelect, setFilterSelect] = useState('all');\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [initialTodos, setInitialTodos] = useState<Todo[]>([]);\n\n  const onSelectedTodo = (todoId: number) => {\n    setSelectedTodo(todos.find(todo => todo.id === todoId) || null);\n  };\n\n  const setClose = () => {\n    setSelectedTodo(null);\n  };\n\n  const searchByInput = (todoTitle: string, searchInput: string) => {\n    return todoTitle.toLowerCase().includes(searchInput.toLowerCase());\n  };\n\n  useEffect(() => {\n    getTodos().then(todo => {\n      setTodos(todo);\n      setInitialTodos(todo);\n      setIsLoading(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    setTodos(\n      initialTodos.filter(({ title, completed }) => {\n        switch (filterSelect) {\n          case FilterType.ALL:\n            return searchByInput(title, query);\n\n          case FilterType.ACTIVE:\n            return !completed && searchByInput(title, query);\n\n          case FilterType.COMPLETED:\n            return completed && searchByInput(title, query);\n\n          default:\n            throw new Error('Something went wrong, contact support');\n        }\n      }),\n    );\n  }, [initialTodos, query, filterSelect]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilterSelect={setFilterSelect}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={todos}\n                  onSelectedTodo={onSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setClose={setClose}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}